version: "3.9"

services:
  qdrant:
    build:
      context: .
      dockerfile: ./docker/qdrant/Dockerfile
    container_name: qdrant
    restart: always
    ports:
      - 6333:6333
    expose:
      - 6333
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - answer_bot_network

  qdrant_init:
    build:
      context: .
      dockerfile: ./docker/qdrant/Dockerfile.init
      args:
        - POETRY_VERSION=1.8.3
    container_name: qdrant_init
    depends_on:
      qdrant:
        condition: service_healthy
    command: ["python", "init_qdrant.py", "--url", "http://qdrant:6333"]
    networks:
    - answer_bot_network

  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
      args:
        - POETRY_VERSION=1.8.3
    container_name: backend
    depends_on:
        qdrant:
          condition: service_healthy
        qdrant_init:
          condition: service_completed_successfully
    environment:
      - OPENAI_MODEL=${OPENAI_MODEL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL}
      - QDRANT_URL=http://qdrant:6333
    ports:
      - 4242:4242
    expose:
      - 4242
    volumes:
      - ./backend/data:/app/backend/data
    networks:
      - answer_bot_network

  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
      args:
        - POETRY_VERSION=1.8.3
    container_name: frontend
    depends_on:
      - backend
    environment:
      - CONTAINER_URL=http://backend:4242
    ports:
      - 8501:8501
    expose:
      - 8501
    networks:
      - answer_bot_network

networks:
  answer_bot_network:
    driver: bridge